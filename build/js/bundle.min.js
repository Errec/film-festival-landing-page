!function(o,e,t){"use strict";function l(){if(!("scrollBehavior"in e.documentElement.style)){var l=o.HTMLElement||o.Element,r=468,s={scroll:o.scroll||o.scrollTo,scrollBy:o.scrollBy,elScroll:l.prototype.scroll||c,scrollIntoView:l.prototype.scrollIntoView},i=o.performance&&o.performance.now?o.performance.now.bind(o.performance):Date.now;o.scroll=o.scrollTo=function(){n(arguments[0])?s.scroll.call(o,arguments[0].left||arguments[0],arguments[0].top||arguments[1]):f.call(o,e.body,~~arguments[0].left,~~arguments[0].top)},o.scrollBy=function(){n(arguments[0])?s.scrollBy.call(o,arguments[0].left||arguments[0],arguments[0].top||arguments[1]):f.call(o,e.body,~~arguments[0].left+(o.scrollX||o.pageXOffset),~~arguments[0].top+(o.scrollY||o.pageYOffset))},l.prototype.scroll=l.prototype.scrollTo=function(){if(n(arguments[0]))s.elScroll.call(this,arguments[0].left||arguments[0],arguments[0].top||arguments[1]);else{var o=arguments[0].left,e=arguments[0].top;f.call(this,this,"number"==typeof o?o:this.scrollLeft,"number"==typeof e?e:this.scrollTop)}},l.prototype.scrollBy=function(){var o=arguments[0];"object"==typeof o?this.scroll({left:o.left+this.scrollLeft,top:o.top+this.scrollTop,behavior:o.behavior}):this.scroll(this.scrollLeft+o,this.scrollTop+arguments[1])},l.prototype.scrollIntoView=function(){if(n(arguments[0]))s.scrollIntoView.call(this,arguments[0]||!0);else{var t=function(t){var l,r,s;do{l=(t=t.parentNode)===e.body,r=t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth,s="visible"===o.getComputedStyle(t,null).overflow}while(!l&&(!r||s));return l=r=s=null,t}(this),l=t.getBoundingClientRect(),r=this.getBoundingClientRect();t!==e.body?(f.call(this,t,t.scrollLeft+r.left-l.left,t.scrollTop+r.top-l.top),o.scrollBy({left:l.left,top:l.top,behavior:"smooth"})):o.scrollBy({left:r.left,top:r.top,behavior:"smooth"})}}}function c(o,e){this.scrollLeft=o,this.scrollTop=e}function n(o){if("object"!=typeof o||null===o||o.behavior===t||"auto"===o.behavior||"instant"===o.behavior)return!0;if("object"==typeof o&&"smooth"===o.behavior)return!1;throw new TypeError("behavior not valid")}function a(e){var t,l,s,c,n=(i()-e.startTime)/r;c=n=n>1?1:n,t=.5*(1-Math.cos(Math.PI*c)),l=e.startX+(e.x-e.startX)*t,s=e.startY+(e.y-e.startY)*t,e.method.call(e.scrollable,l,s),l===e.x&&s===e.y||o.requestAnimationFrame(a.bind(o,e))}function f(t,l,r){var n,f,p,u,h=i();t===e.body?(n=o,f=o.scrollX||o.pageXOffset,p=o.scrollY||o.pageYOffset,u=s.scroll):(n=t,f=t.scrollLeft,p=t.scrollTop,u=c),a({scrollable:n,method:u,startTime:h,startX:f,startY:p,x:l,y:r})}}"object"==typeof exports?module.exports={polyfill:l}:l()}(window,document);var scroolToSections=function(){var o=document.querySelector(".header__link-movies"),e=document.querySelector(".header__link-about"),t=document.querySelector(".hero__btn"),l=document.querySelector(".header__link-contact"),r=document.querySelector(".movies"),s=document.querySelector(".infos-register"),i=document.querySelector(".register"),c=document.querySelector(".contact");o.addEventListener("click",function(o){o.preventDefault(),r.scrollIntoView({behavior:"smooth"})}),e.addEventListener("click",function(o){o.preventDefault(),s.scrollIntoView({behavior:"smooth"})}),t.addEventListener("click",function(o){o.preventDefault(),i.scrollIntoView({behavior:"smooth"})}),l.addEventListener("click",function(o){o.preventDefault(),c.scrollIntoView({behavior:"smooth"})})}();$(document).ready(function(){$(".movies__carousel").slick({arrows:!0,centerMode:!0,infinite:!0,slidesToScroll:4,speed:400,variableWidth:!0,responsive:[{breakpoint:1024,settings:{slidesToShow:2,slidesToScroll:2,infinite:!0}},{breakpoint:600,settings:{arrows:!1,infinite:!0,slidesToShow:2,slidesToScroll:2}},{breakpoint:480,settings:{arrows:!1,infinite:!0,slidesToShow:1,slidesToScroll:1}}]})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
